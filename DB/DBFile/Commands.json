[
    {
        "name": "getExistsPlatform",
        "path": "\/link\/exists\/platform",
        "method": "GET",
        "description": {
            "de": "prüft, ob die Tabelle und die Prozeduren existieren und die Komponente generell vollständig installiert ist"
        },
        "inputType": "",
        "outputType": "Platform",
        "callback": "getMatch",
        "singleOutput": "TRUE"
    },
    {
        "name": "removeFile",
        "path": "\/file\/file\/:fileid",
        "method": "DELETE",
        "description": {
            "de": "entfernt einen Eintrag anhand der ID"
        },
        "placeholder": [
            {
                "name": "fileid",
                "regex": "%^([0-9_]+)$%",
                "description": {
                    "de": "die ID einer Datei (`File`)"
                }
            }
        ],
        "inputType": "",
        "outputType": "File",
        "singleOutput": "TRUE"
    },
    {
        "name": "editFile",
        "path": "\/file\/file\/:fileid",
        "method": "PUT",
        "description": {
            "de": "editiert einen Eintrag"
        },
        "placeholder": [
            {
                "name": "fileid",
                "regex": "%^([0-9_]+)$%",
                "description": {
                    "de": "die ID einer Datei (`File`)"
                }
            }
        ],
        "inputType": "File",
        "outputType": "File"
    },
    {
        "name": "getFileByMimeType",
        "path": "\/file\/mimetype\/:base(\/:type)(\/timestamp\/begin\/:beginStamp\/end\/:endStamp)",
        "method": "GET",
        "description": {
            "de": "ermittelt Einträge anhand des MIME-Type"
        },
        "placeholder": [
            {
                "name": "base",
                "regex": "%^[a-zA-Z]+$%",
                "description": {
                    "de": "die Basis eines MimeType Bsp.: text, application"
                }
            },
            {
                "name": "type",
                "regex": "%^[a-zA-Z]+$%",
                "description": {
                    "de": "der explizite Typ eines MimeType Bsp.: c++, pdf"
                }
            },
            {
                "name": "beginStamp",
                "regex": "%^([0-9_]+)$%",
                "description": {
                    "de": "der Anfangsstempel (Unix-Zeitstempel)"
                }
            },
            {
                "name": "endStamp",
                "regex": "%^([0-9_]+)$%",
                "description": {
                    "de": "der Endstempel (Unix-Zeitstempel)"
                }
            }
        ],
        "inputType": "",
        "outputType": "File",
        "callback": "getMatch"
    },
    {
        "name": "getFile",
        "path": "\/file\/file\/:fileid",
        "method": "GET",
        "description": {
            "de": "ermittelt einen Eintrag anhand der ID"
        },
        "placeholder": [
            {
                "name": "fileid",
                "regex": "%^([0-9_]+)$%",
                "description": {
                    "de": "die ID einer Datei (`File`)"
                }
            }
        ],
        "inputType": "",
        "outputType": "File",
        "callback": "getMatch",
        "singleOutput": "TRUE"
    },
    {
        "name": "postSamples",
        "path": "\/samples\/course\/:courseAmount\/user\/:userAmount",
        "method": "POST",
        "description": {
            "de": "erzeugt Zufallsdaten (courseAmount = Anzahl der Veranstaltungen, userAmount = Anzahl der Nutzer), anhand der Vorgabe"
        },
        "inputType": "",
        "outputType": "Query"
    },
    {
        "name": "getFileByHash",
        "path": "\/file\/hash\/:hash",
        "method": "GET",
        "description": {
            "de": "ermittelt einen Eintrag anhand des Hash (`F_hash`)"
        },
        "placeholder": [
            {
                "name": "hash",
                "regex": "%^[0-9a-fA-F]{40}$%",
                "description": {
                    "de": "der Hashwert einer Datei"
                }
            }
        ],
        "inputType": "",
        "outputType": "File",
        "callback": "getMatch",
        "singleOutput": "TRUE"
    },
    {
        "name": "getAllFiles",
        "path": "\/file(\/timestamp\/begin\/:beginStamp\/end\/:endStamp)",
        "method": "GET",
        "description": {
            "de": "liefert alle Dateien"
        },
        "placeholder": [
            {
                "name": "beginStamp",
                "regex": "%^([0-9_]+)$%",
                "description": {
                    "de": "der Anfangsstempel (Unix-Zeitstempel)"
                }
            },
            {
                "name": "endStamp",
                "regex": "%^([0-9_]+)$%",
                "description": {
                    "de": "der Endstempel (Unix-Zeitstempel)"
                }
            }
        ],
        "inputType": "",
        "outputType": "File",
        "callback": "getMatch"
    },
    {
        "name": "deletePlatform",
        "path": "\/platform",
        "method": "DELETE",
        "description": {
            "de": "entfernt die Komponente und ihre installierten Bestandteile aus der Plattform"
        },
        "inputType": "",
        "outputType": "Platform"
    },
    {
        "name": "addFile",
        "path": "\/file",
        "method": "POST",
        "description": {
            "de": "trägt eine neue Datei ein"
        },
        "inputType": "File",
        "outputType": "File"
    },
    {
        "name": "getSamplesInfo",
        "path": "\/samples",
        "method": "GET",
        "description": {
            "de": "liefert die Bezeichner der betroffenen Tabellen"
        },
        "inputType": "",
        "outputType": ""
    },
    {
        "name": "addPlatform",
        "path": "\/platform",
        "method": "POST",
        "description": {
            "de": "installiert die zugehörige Tabelle und die Prozeduren für diese Plattform"
        },
        "inputType": "Platform",
        "outputType": "Platform"
    },
    {
        "name": "getApiProfiles",
        "path": "\/api\/profiles",
        "method": "GET",
        "description": {
            "de": "liefert `GateProfile`-Objekte, welche unsere Befehle in die Standardprofile von CGate einsortieren"
        },
        "inputType": "",
        "outputType": "GateProfile"
    }
]