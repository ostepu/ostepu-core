[
    {
        "name": "postSamples",
        "path": "\/samples\/course\/:courseAmount\/user\/:userAmount",
        "method": "POST",
        "description": {
            "de": "erzeugt Zufallsdaten (courseAmount = Anzahl der Veranstaltungen, userAmount = Anzahl der Nutzer), anhand der Vorgabe"
        },
        "inputType": "",
        "outputType": "Query"
    },
    {
        "name": "removeUser",
        "path": "\/user\/user\/:userid",
        "method": "DELETE",
        "description": {
            "de": "setzt U_flag = 0 und löst damit das Entfernen der persönlichen Nutzerdaten aus (entfernt das Nutzerkonto nicht), zusätzlich wird eine eventuell aktive Session entfernt"
        },
        "placeholder": [
            {
                "name": "userid",
                "regex": "%^([a-zA-Z0-9äöüÄÖÜß]+)$%",
                "description": {
                    "de": "die ID eines Nutzers oder ein Nuzername (`User`)"
                }
            }
        ],
        "inputType": "",
        "outputType": "User"
    },
    {
        "name": "getCourseUserByStatus",
        "path": "\/user\/course\/:courseid\/status\/:statusid",
        "method": "GET",
        "description": {
            "de": "liefert Nutzerdaten, mit einem bestimmten Status (siehe CourseStatus::getStatusDefinition()) in dieser Veranstaltung"
        },
        "placeholder": [
            {
                "name": "courseid",
                "regex": "%^([0-9_]+)$%",
                "description": {
                    "de": "eine Veranstaltungs ID (`Course`)"
                }
            },
            {
                "name": "statusid",
                "regex": "%^([0-9_]+)$%",
                "description": {
                    "de": "die ID eines Veranstaltungsstatus (siehe `DBCourseStatus::getStatusDefinition()`)"
                }
            }
        ],
        "inputType": "",
        "outputType": "User",
        "callback": "getMatch"
    },
    {
        "name": "getExistsPlatform",
        "path": "\/link\/exists\/platform",
        "method": "GET",
        "description": {
            "de": "prüft, ob die Tabelle und die Prozeduren existieren"
        },
        "inputType": "",
        "outputType": "Platform",
        "callback": "getMatch",
        "singleOutput": "TRUE"
    },
    {
        "name": "removeUserPermanent",
        "path": "\/user\/user\/:userid\/permanent",
        "method": "DELETE",
        "description": {
            "de": "entfernt das Nutzerkonto entgültig mit allen Konsequenzen (eventuell sind Einsendungen und damit auch Gruppenmitglieder betroffen)"
        },
        "placeholder": [
            {
                "name": "userid",
                "regex": "%^([a-zA-Z0-9äöüÄÖÜß]+)$%",
                "description": {
                    "de": "die ID eines Nutzers oder ein Nuzername (`User`)"
                }
            }
        ],
        "inputType": "",
        "outputType": "User"
    },
    {
        "name": "getUser",
        "path": "\/user\/user\/:userid",
        "method": "GET",
        "description": {
            "de": "liefert einen einzelnen Nutzer (anhand des Nutzernamens oder der ID)"
        },
        "placeholder": [
            {
                "name": "userid",
                "regex": "%^([a-zA-Z0-9äöüÄÖÜß]+)$%",
                "description": {
                    "de": "die ID eines Nutzers oder ein Nuzername (`User`)"
                }
            }
        ],
        "inputType": "",
        "outputType": "User",
        "callback": "getMatch",
        "singleOutput": "TRUE"
    },
    {
        "name": "getGroupMember",
        "path": "\/user\/group\/user\/:userid\/exercisesheet\/:esid",
        "method": "GET",
        "description": {
            "de": "liefert alle Gruppenangehörigen eines Nutzers in einer bestimmten Übungsserie (dabei ist es egal, ob dieser Nutzer Gruppenführer oder Mitglied ist)"
        },
        "placeholder": [
            {
                "name": "esid",
                "regex": "%^([0-9_]+)$%",
                "description": {
                    "de": "die ID einer Übungsserie (`ExerciseSheet`)"
                }
            }
        ],
        "inputType": "",
        "outputType": "User",
        "callback": "getMatch"
    },
    {
        "name": "addUser",
        "path": "\/user",
        "method": "POST",
        "description": {
            "de": "fügt eine neues Nutzerkonto ein"
        },
        "inputType": "User",
        "outputType": "User"
    },
    {
        "name": "editUser",
        "path": "\/user\/user\/:userid",
        "method": "PUT",
        "description": {
            "de": "editiert ein vorhandenes Nutzerkonto"
        },
        "placeholder": [
            {
                "name": "userid",
                "regex": "%^([a-zA-Z0-9äöüÄÖÜß]+)$%",
                "description": {
                    "de": "die ID eines Nutzers oder ein Nuzername (`User`)"
                }
            }
        ],
        "inputType": "User",
        "outputType": "User"
    },
    {
        "name": "addPlatform",
        "path": "\/platform",
        "method": "POST",
        "description": {
            "de": "installiert die zugehörige Tabelle und die Prozeduren für diese Plattform"
        },
        "inputType": "Platform",
        "outputType": "Platform"
    },
    {
        "name": "getUserByStatus",
        "path": "\/user\/status\/:statusid",
        "method": "GET",
        "description": {
            "de": "liefert Nutzerdaten, mit einem bestimmten Status (siehe CourseStatus::getStatusDefinition()), für alle Veranstaltungen"
        },
        "placeholder": [
            {
                "name": "statusid",
                "regex": "%^([0-9_]+)$%",
                "description": {
                    "de": "die ID eines Veranstaltungsstatus (siehe `DBCourseStatus::getStatusDefinition()`)"
                }
            }
        ],
        "inputType": "",
        "outputType": "User",
        "callback": "getMatch"
    },
    {
        "name": "getUsers",
        "path": "\/user",
        "method": "GET",
        "description": {
            "de": "liefert alle existierenden Nutzerkonten (gesperrte und aktive)"
        },
        "inputType": "",
        "outputType": "User",
        "callback": "getMatch"
    },
    {
        "name": "deletePlatform",
        "path": "\/platform",
        "method": "DELETE",
        "description": {
            "de": "entfernt die Tabelle und Prozeduren aus der Plattform"
        },
        "inputType": "",
        "outputType": "Platform"
    },
    {
        "name": "getIncreaseUserFailedLogin",
        "path": "\/user\/user\/:userid\/IncFailedLogin",
        "method": "GET",
        "description": {
            "de": "setzt `U_failed_logins` auf den aktuellen Zeitstempel (damit klar ist, wann der letzte fehlerhafte Loginversuch war)"
        },
        "placeholder": [
            {
                "name": "userid",
                "regex": "%^([a-zA-Z0-9äöüÄÖÜß]+)$%",
                "description": {
                    "de": "die ID eines Nutzers oder ein Nuzername (`User`)"
                }
            }
        ],
        "inputType": "",
        "outputType": "User",
        "callback": "getMatch",
        "singleOutput": "TRUE"
    },
    {
        "name": "getSamplesInfo",
        "path": "\/samples",
        "method": "GET",
        "description": {
            "de": "liefert die Bezeichner der betroffenen Tabellen"
        },
        "inputType": "",
        "outputType": ""
    },
    {
        "name": "getCourseMember",
        "path": "\/user\/course\/:courseid",
        "method": "GET",
        "description": {
            "de": "liefert alle Nutzer zu einer Veranstaltung"
        },
        "placeholder": [
            {
                "name": "courseid",
                "regex": "%^([0-9_]+)$%",
                "description": {
                    "de": "eine Veranstaltungs ID (`Course`)"
                }
            }
        ],
        "inputType": "",
        "outputType": "User",
        "callback": "getMatch"
    },
    {
        "name": "getApiProfiles",
        "path": "\/api\/profiles",
        "method": "GET",
        "description": {
            "de": "liefert `GateProfile`-Objekte, welche unsere Befehle in die Standardprofile von CGate einsortieren"
        },
        "inputType": "",
        "outputType": "GateProfile"
    }
]